<?php


/**
 * Implements hook_views_api().
 */
function devconnect_blog_views_api($module = NULL, $api = NULL) {
  return array('api' => '3.0');
}

/**
 * Implements hook_ctools_plugin_api().
 */
function devconnect_blog_ctools_plugin_api($module = NULL, $api = NULL) {
  if ($module == 'context' && $api == 'context') {
    return array('version' => '3');
  }
}

function devconnect_blog_theme() {
  return array(
    'devconnect-blog-content-creation-menu' => array(
      'variables' => array(
        'menu_items' => array()
      )
    )
  );
}


/**
 * Implements hook_views_default_views().
 *
 * @return array
 * @author stovak
 */

function devconnect_blog_views_default_views() {

  $vocab = taxonomy_vocabulary_machine_name_load('content_type_tag');
  $term = entity_load('taxonomy_term', FALSE, array('vid' => $vocab->vid, 'name' => 'blog'));
  $term = reset($term);
  $tid = $term->tid;

  $view = new view();
  $view->name = 'devconnect_blog';
  $view->description = '';
  $view->tag = 'default';
  $view->base_table = 'node';
  $view->human_name = 'Items tagged as blog content';
  $view->core = 7;
  $view->api_version = '3.0';
  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

  /* Display: Master */
  $handler = $view->new_display('default', 'Master', 'default');
  $handler->display->display_options = array(
    'title' => t('Blog'),
    'user_more_always' => FALSE,
    'access' => array('type' => 'perm'),
    'cache' => array('type' => 'none'),
    'query' => array('type' => 'views_query'),
    'exposed_form' => array('type' => 'basic'),
    'pager' => array(
      'type' => 'full',
      'options' => array('items_per_page' => 10, 'offset' => 0, 'id' => 0, 'quantity' => 9)
    ),
    'style_plugin' => 'default',
    'row_plugin' => 'node',
    'fields' => array(
      'title' => array(
        'id' => 'title',
        'table' => 'node',
        'field' => 'title',
        'label' => '',
        'alter' => array('word_boundary' => FALSE, 'ellipsis' => FALSE)
      )
    ),
    'sorts' => array(
      'created' => array(
        'id' => 'created',
        'table' => 'node',
        'field' => 'created',
        'order' => 'DESC'
      )
    ),
    'filters' => array(
      'status' => array(
        'id' => 'status',
        'table' => 'node',
        'field' => 'status',
        'value' => 1,
        'group' => 1,
        'expose' => array('operator' => FALSE)
      ),
      'tid' => array(
        'id' => 'tid',
        'table' => 'taxonomy_index',
        'field' => 'tid',
        'value' => array($tid => $tid),
        'type' => 'select',
        'vocabulary' => 'content_type_tag',
        'hierarchy' => 1
      )
    ),
    'css_class' => 'view-recent-blog-posts'
  );

  /* Display: Page */
  $handler = $view->new_display('page', 'Page', 'page');
  $handler->display->display_options = array(
    'path' => 'blog',
    'menu' => array(
      'type' => 'normal',
      'title' => t('Blog'),
      'weight' => -10,
      'name' => 'main-menu',
      'context' => 0,
      'context_only_inline' => 0
    ),
    'defaults' => array('css_class' => FALSE)
  );

  /* Display: Block */
  $handler = $view->new_display('block', 'Recent Posts Block', 'block_1');
  $handler->display->display_options = array(
    'defaults' => array(
      'title' => FALSE,
      'pager' => FALSE,
      'style_plugin' => FALSE,
      'style_options' => FALSE,
      'row_plugin' => FALSE,
      'row_options' => FALSE,
      'fields' => FALSE
    ),
    'title' => t('Recent Blog Posts'),
    'pager' => array('type' => 'some', 'options' => array('items_per_page' => 2, 'offset' => 0)),
    'style_plugin' => 'default',
    'row_plugin' => 'fields',
    'fields' => array(
      'created' => array(
        'id' => 'created',
        'table' => 'node',
        'field' => 'created',
        'label' => '',
        'element_label_colon' => FALSE,
        'date_format' => 'custom',
        'custom_date_format' => 'M d'
      ),
      'title' => array(
        'id' => 'title',
        'table' => 'node',
        'field' => 'title',
        'label' => '',
        'exclude' => TRUE,
        'alter' => array('word_boundary' => FALSE, 'ellipsis' => FALSE),
      ),
      'body_hidden' => array(
        'id' => 'body_hidden',
        'table' => 'field_data_body',
        'field' => 'body',
        'label' => '',
        'exclude' => TRUE,
        'alter' => array('max_length' => 240, 'trim' => TRUE),
      ),
      'body' => array(
        'id' => 'body',
        'table' => 'views',
        'field' => 'nothing',
        'label' => '',
        'alter' => array('text' => '[title]<span class="blog-icon"></span><br>[body_hidden]'),
        'element_label_colon' => FALSE,
        'element_type' => 'div'
      )
    )
  );

  return array($view->name => $view);
}

/**
 * Implements hook_context_default_contexts().
 */
function devconnect_blog_context_default_contexts() {
  $contexts = array();

  $context = new stdClass();
  $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
  $context->api_version = 3;
  $context->name = 'blog';
  $context->description = '';
  $context->tag = '';
  $context->conditions = array(
    'path' => array(
      'values' => array(
        'blog' => 'blog',
      ),
    ),
  );
  $context->reactions = array(
    'block' => array(
      'blocks' => array(
        'devconnect_content_creation_menu-devconnect_content_creation_menu' => array(
          'module' => 'devconnect_content_creation_menu',
          'delta' => 'devconnect_content_creation_menu',
          'region' => 'content',
          'weight' => '-10',
        ),
        'system-main' => array(
          'module' => 'system',
          'delta' => 'main',
          'region' => 'content',
          'weight' => '-9',
        ),
        'views-hot_topics-block' => array(
          'module' => 'views',
          'delta' => 'hot_topics-block',
          'region' => 'sidebar_second',
          'weight' => '-10',
        ),
      ),
    ),
  );
  $context->condition_mode = 0;
  $contexts[] = $context;
  return $contexts;
}

function devconnect_blog_node_info() {
  return array(
    'devconnect_blog' => array(
      'name' => t('Devconnect Blog entry'),
      'base' => 'blog',
      'description' => t('Use for devconnect blogging function.'),
    )
  );
}

function theme_devconnect_blog_content_creation_menu($vars) {


}